<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0060)http://www.cs.unc.edu/~mcmillan/comp136/Lecture15/rigid.html -->
<HTML><HEAD><TITLE>Translations and Rotations ---- Lecture 15</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="MSHTML 6.00.2600.0" name=GENERATOR></HEAD>
<BODY bgColor=silver>
<CENTER>
<H1>Rigid Body Transformations</H1></CENTER>The first modeling transformations 
that we will consider are called the rigid-body, or Euclidean transfromations. A 
unique property of these transfromations is that they preserve the shape of the 
objects that they act on. 
<HR>

<H2>Points</H2>We start by discussing the representation that we will use for 
the points that we use in our three-dimensional models. We will consider points 
as column vectors. Thus a typical point with coordinates <I>(x, y, z)</I> is 
represented as: 
<CENTER><IMG height=115 
src="Translations and Rotations ---- Lecture 15_files/point.gif" width=51 
border=0></CENTER>The is not the only possible representation. You may encounter 
textbooks that consider points as row vectors. What is most important is that 
you select a consistent represention. 
<HR>

<H2>Relationships between Vector and Matrix Algebra</H2>You've probably been 
exposed to some of the important operators of vector algebra in previous 
courses. These include <I>vector addition</I>, the <I>vector dot product</I>, 
and the <I>vector cross product</I>. Here I will discuss an equivalent set of 
matrix operators. 
<P>We begin with the dot product. This operation acts on two vectors and returns 
a scalar. Geometrically, this operation can be described as a projection of one 
vector onto another. The dot product has the following matrix formulation. 
<CENTER><IMG height=143 
src="Translations and Rotations ---- Lecture 15_files/dotp.gif" width=377 
border=0></CENTER>
<P>The vector cross product also acts on two vectors, but it returns a third 
vector. Geometrically, this new vector is constructed such that its projection 
onto either of the two input vectors is zero. 
<CENTER><IMG height=155 
src="Translations and Rotations ---- Lecture 15_files/crossp.gif" width=558 
border=0></CENTER>
<P>Consider what this means for a moment. In order for one vector to project 
onto another with a length of zero, it must either have a length of zero, or be 
<I>perpendicular</I> to the second vector. Yet the vector generated by the 
cross-product operator is perpendicular to two vectors. Since the two input 
vectors define a plane in space, the vector that results from the cross product 
operation is perpendicular, or <I>normal</I> to this plane. 
<P>For any palne there are two possible choices of a normal vector, one on each 
side of a plane. The cross product is defined to be the one of these two vectors 
where the motion form the tip of the first input vector to the tip of the second 
input vector is in a counter-clockwise direction when observed from the side of 
the normal. This is just a restatement of the right-hand rule that you are 
familiar with. 
<HR>

<H2>Translations</H2>As I mentioned last lecture, objects are usually defined 
relative to their own coordinate system. We can <I>translate</I> points in space 
to new positions by adding offsets to their coordinates, as shown in the 
following vector equation. 
<CENTER><IMG height=114 
src="Translations and Rotations ---- Lecture 15_files/translate.gif" width=160 
border=0></CENTER>The following figure shows the effect of translating a teapot. 

<CENTER><IMG height=200 
src="Translations and Rotations ---- Lecture 15_files/transpic.gif" width=400 
border=0></CENTER>
<HR>

<H2>Rotations</H2>Rotations in three-dimensions are considerably more 
complicated than two-dimensional rotations. In general, rotations are specified 
by a rotation axis and an angle. In two-dimensions there is only one choice of a 
rotation axis that leaves points in the plane. 
<CENTER><IMG height=120 
src="Translations and Rotations ---- Lecture 15_files/rotpic.gif" width=291 
border=0></CENTER>
<P>There are many different ways to present rotations. I will use a different 
approach than that used in the book. In the book all possible rotations are 
treated as the compostion of three canonical rotations, one about the x-axis, 
one abount the y-axis and one about the z-axis. In order to use this model you 
need to do the following. Memorize the three canonical rotations, which aside 
from the signs of the sines, isn't too hard. An then you have to go through a 
series of rotations which move the desired rotation axis onto one of your 
canonical rotations and then you have to rotate it back without introducing any 
extraneous twists. <B>This is a difficult and error-prone process. But worst of 
all it is ambiguous. There exist several different combinations canonical 
rotations that result in the same overall result.</B> 
<P>There is another way that I beleive is both easier to understand and provides 
you with more insights into what rotation is really about. Instead of specifying 
a rotation by a series of canonical angles, instead we will specify an axis of 
rotation and a single angle. 
<CENTER><IMG height=107 
src="Translations and Rotations ---- Lecture 15_files/rotate.gif" width=530 
border=0></CENTER>
<P>The normalized vector a specifies our axis of rotation (what does it mean to 
be normalized). The angle theta gives the amount of the rotation about this 
axis. At first you might ask "How am I going to remeber this equation?". 
However, once you understand the geometry of rotation, the equation will seem 
obvious. 
<P>The basic idea is that <I><FONT color=purple>any rotation can be decomposed 
into weighted contributions from three different vectors</FONT></I>. These 
vectors are rotation axis, a vector that is perpendicular to both the rotation 
axis and the point being rotated, and the point itself. These vectors correspond 
to the each respective term in the expression. 
<P>Let's look at each term in detail. First we'll see why the Symmetric matrix 
of a vector generates a vector in the the direction of the axis. 
<CENTER><IMG height=100 
src="Translations and Rotations ---- Lecture 15_files/symmetric.gif" width=474 
border=0></CENTER>
<P>Next, consider how the Skew symmetric matrix of a vector genrates a vector 
that is perpindicular to both the axis and it's input vector. 
<CENTER><IMG height=103 
src="Translations and Rotations ---- Lecture 15_files/skew.gif" width=425 
border=0></CENTER>
<P>From the idenity matrix in the third term it is easy to see how it will 
generate a vector in the same direction as the input vector. 
<P>We can now test our new found knowledge. Forst consider a rotation by 0. 
<CENTER><IMG height=80 
src="Translations and Rotations ---- Lecture 15_files/rotate0.gif" width=526 
border=0></CENTER>
<P>We can also use this equation to derive all of the rotation matrices given in 
the book. For instance, here is a rotation about the x-axis. 
<CENTER><IMG height=76 
src="Translations and Rotations ---- Lecture 15_files/rotateX.gif" width=526 
border=0></CENTER>
<P>Next, we can derive the rotation about the y-axis. 
<CENTER><IMG height=76 
src="Translations and Rotations ---- Lecture 15_files/rotateY.gif" width=526 
border=0></CENTER>
<P>Last, we can find the matrix for rotations about the z-axis. 
<CENTER><IMG height=78 
src="Translations and Rotations ---- Lecture 15_files/rotateZ.gif" width=528 
border=0></CENTER>
<P>This approach to (or parameterization of) rotations is completely general and 
unambiguous. If you grasp this simple concept and understand the geometry, then 
don't be surprized if, in a few years, everyone is coming to you to compute 
their rotation matices. They will also drop their jaws in amazement, when you 
just write down the 3x3 marix. 
<HR>
<I>This page last modified Tuesday, October 15, 1996</I> </BODY></HTML>
